<?xml version="1.0"?>
<suiteResults>
  <FitNesseVersion>v20211030</FitNesseVersion>
  <rootPath>FrontPage.StudentsRESTSuite</rootPath>
  <pageHistoryReference>
    <name>FrontPage.StudentsRESTSuite.CreateOneEmployee</name>
    <date>2021-11-30T22:33:55-07:00</date>
    <pageHistoryLink>FrontPage.StudentsRESTSuite.CreateOneEmployee?pageHistory&amp;resultDate=20211130223355</pageHistoryLink>
    <counts>
      <right>3</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <runTimeInMillis>401</runTimeInMillis>
  </pageHistoryReference>
  <pageHistoryReference>
    <name>FrontPage.StudentsRESTSuite.GETAllStudents</name>
    <date>2021-11-30T22:33:55-07:00</date>
    <pageHistoryLink>FrontPage.StudentsRESTSuite.GETAllStudents?pageHistory&amp;resultDate=20211130223355</pageHistoryLink>
    <counts>
      <right>4</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <runTimeInMillis>20</runTimeInMillis>
  </pageHistoryReference>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>java -cp /Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/htmlparser-2.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-api-1.7.20.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/velocity-engine-core-2.3.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/junit-3.8.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-jdk14-1.7.25.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-log4j12-1.7.20.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-httpclient-3.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-text-1.9.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/rhino-1.7R3.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/smartrics-RestFixture-4.4.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-logging-1.0.4.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/fitnesse-20211030.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/log4j-1.2.17.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/json-20210307.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-codec-1.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/jettison-1.3.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/smartrics-RestClient-2.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xstream-1.4.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/diffutils-1.3.0.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/stax-api-1.0.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xmlpull-1.1.3.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xpp3_min-1.1.4c.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-lang3-3.12.0.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/htmllexer-2.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/fitnesse-20211030.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut>22:33:55,694 DEBUG [DefaultHttpParams] - Set parameter http.useragent = Jakarta Commons-HttpClient/3.1

22:33:55,695 DEBUG [DefaultHttpParams] - Set parameter http.protocol.version = HTTP/1.1

22:33:55,695 DEBUG [DefaultHttpParams] - Set parameter http.connection-manager.class = class org.apache.commons.httpclient.SimpleHttpConnectionManager

22:33:55,695 DEBUG [DefaultHttpParams] - Set parameter http.protocol.cookie-policy = default

22:33:55,695 DEBUG [DefaultHttpParams] - Set parameter http.protocol.element-charset = US-ASCII

22:33:55,695 DEBUG [DefaultHttpParams] - Set parameter http.protocol.content-charset = ISO-8859-1

22:33:55,696 DEBUG [DefaultHttpParams] - Set parameter http.method.retry-handler = org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@f5958c9

22:33:55,696 DEBUG [DefaultHttpParams] - Set parameter http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyyy HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z, EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy HH:mm:ss z]

22:33:55,696 DEBUG [DefaultHttpParams] - Set parameter http.socket.timeout = 3000

22:33:55,696 DEBUG [DefaultHttpParams] - Set parameter http.socket.timeout = 3000

22:33:55,697 DEBUG [HttpClient] - Java version: 11.0.12

22:33:55,697 DEBUG [HttpClient] - Java vendor: Homebrew

22:33:55,697 DEBUG [HttpClient] - Java class path: /Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/htmlparser-2.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-api-1.7.20.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/velocity-engine-core-2.3.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/junit-3.8.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-jdk14-1.7.25.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-log4j12-1.7.20.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-httpclient-3.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-text-1.9.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/rhino-1.7R3.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/smartrics-RestFixture-4.4.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-logging-1.0.4.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/fitnesse-20211030.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/log4j-1.2.17.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/json-20210307.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-codec-1.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/jettison-1.3.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/smartrics-RestClient-2.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xstream-1.4.2.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/diffutils-1.3.0.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/stax-api-1.0.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xmlpull-1.1.3.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/xpp3_min-1.1.4c.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/commons-lang3-3.12.0.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/htmllexer-2.1.jar:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/fitnesse-20211030.jar

22:33:55,697 DEBUG [HttpClient] - Operating system name: Mac OS X

22:33:55,697 DEBUG [HttpClient] - Operating system architecture: x86_64

22:33:55,697 DEBUG [HttpClient] - Operating system version: 11.6

22:33:55,719 DEBUG [HttpClient] - SUN 11.0: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; PKCS12, JKS &amp; DKS keystores; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)

22:33:55,720 DEBUG [HttpClient] - SunRsaSign 11.0: Sun RSA signature provider

22:33:55,720 DEBUG [HttpClient] - SunEC 11.0: Sun Elliptic Curve provider (EC, ECDSA, ECDH)

22:33:55,720 DEBUG [HttpClient] - SunJSSE 11.0: Sun JSSE provider(PKCS12, SunX509/PKIX key/trust factories, SSLv3/TLSv1/TLSv1.1/TLSv1.2/TLSv1.3/DTLSv1.0/DTLSv1.2)

22:33:55,720 DEBUG [HttpClient] - SunJCE 11.0: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC, ChaCha20)

22:33:55,720 DEBUG [HttpClient] - SunJGSS 11.0: Sun (Kerberos v5, SPNEGO)

22:33:55,720 DEBUG [HttpClient] - SunSASL 11.0: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, EXTERNAL, PLAIN, CRAM-MD5, NTLM; server mechanisms for: DIGEST-MD5, CRAM-MD5, NTLM)

22:33:55,720 DEBUG [HttpClient] - XMLDSig 11.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory; C14N 1.0, C14N 1.1, Exclusive C14N, Base64, Enveloped, XPath, XPath2, XSLT TransformServices)

22:33:55,720 DEBUG [HttpClient] - SunPCSC 11.0: Sun PC/SC provider

22:33:55,720 DEBUG [HttpClient] - JdkLDAP 11.0: JdkLDAP Provider (implements LDAP CertStore)

22:33:55,720 DEBUG [HttpClient] - JdkSASL 11.0: JDK SASL provider(implements client and server mechanisms for GSSAPI)

22:33:55,720 DEBUG [HttpClient] - Apple 11.0: Apple Provider

22:33:55,720 DEBUG [HttpClient] - SunPKCS11 11.0: Unconfigured and unusable PKCS11 provider

22:33:55,736 DEBUG [HttpMethodBase] - HttpMethodBase.addRequestHeader(Header)

22:33:55,743 DEBUG [PostMethod] - enter PostMethod.clearRequestBody()

22:33:55,743 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.clearRequestBody()

22:33:55,743 DEBUG [HttpClient] - enter HttpClient.executeMethod(HttpMethod)

22:33:55,743 DEBUG [HttpClient] - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)

22:33:55,746 DEBUG [HttpMethodDirector] - Attempt number 1 to process request

22:33:55,747 DEBUG [HttpConnection] - enter HttpConnection.open()

22:33:55,747 DEBUG [HttpConnection] - Open connection to localhost:8088

22:33:55,758 DEBUG [HttpMethodBase] - enter HttpMethodBase.execute(HttpState, HttpConnection)

22:33:55,758 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)

22:33:55,758 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)

22:33:55,758 DEBUG [HttpMethodBase] - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)

22:33:55,759 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,759 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,759 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,759 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)

22:33:55,759 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.addRequestHeaders(HttpState, HttpConnection)

22:33:55,759 DEBUG [ExpectContinueMethod] - enter ExpectContinueMethod.addRequestHeaders(HttpState, HttpConnection)

22:33:55,759 DEBUG [HttpMethodBase] - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)

22:33:55,759 DEBUG [HttpMethodBase] - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)

22:33:55,759 DEBUG [HttpMethodBase] - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)

22:33:55,759 DEBUG [HttpMethodBase] - Adding Host request header

22:33:55,759 DEBUG [HttpMethodBase] - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)

22:33:55,765 DEBUG [HttpState] - enter HttpState.getCookies()

22:33:55,765 DEBUG [CookieSpec] - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])

22:33:55,765 DEBUG [HttpMethodBase] - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)

22:33:55,765 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.addContentLengthRequestHeader(HttpState, HttpConnection)

22:33:55,765 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.getRequestContentLength()

22:33:55,765 DEBUG [PostMethod] - enter PostMethod.hasRequestContent()

22:33:55,765 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.hasRequestContent()

22:33:55,765 DEBUG [HttpMethodBase] - HttpMethodBase.addRequestHeader(Header)

22:33:55,765 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,765 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,765 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,765 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,765 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.writeLine()

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,766 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.writeRequestBody(HttpState, HttpConnection)

22:33:55,766 DEBUG [PostMethod] - enter PostMethod.hasRequestContent()

22:33:55,766 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.hasRequestContent()

22:33:55,766 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.getRequestContentLength()

22:33:55,766 DEBUG [PostMethod] - enter PostMethod.hasRequestContent()

22:33:55,766 DEBUG [EntityEnclosingMethod] - enter EntityEnclosingMethod.hasRequestContent()

22:33:55,766 DEBUG [HttpConnection] - enter HttpConnection.getRequestOutputStream()

22:33:55,767 DEBUG [EntityEnclosingMethod] - Request body sent

22:33:55,767 DEBUG [HttpConnection] - enter HttpConnection.flushRequestOutputStream()

22:33:55,767 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponse(HttpState, HttpConnection)

22:33:55,768 DEBUG [HttpMethodBase] - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)

22:33:55,768 DEBUG [HttpConnection] - enter HttpConnection.readLine()

22:33:55,768 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,768 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,771 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)

22:33:55,771 DEBUG [HttpConnection] - enter HttpConnection.getResponseInputStream()

22:33:55,771 DEBUG [HttpParser] - enter HeaderParser.parseHeaders(InputStream, String)

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,771 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,772 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,772 DEBUG [HttpMethodBase] - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)

22:33:55,772 DEBUG [HttpMethodBase] - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)

22:33:55,772 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)

22:33:55,772 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseBody(HttpConnection)

22:33:55,772 DEBUG [HttpConnection] - enter HttpConnection.getResponseInputStream()

22:33:55,772 DEBUG [HttpMethodBase] - enter HttpMethodBase.canResponseHaveBody(int)

22:33:55,773 DEBUG [HeaderElement] - enter HeaderElement.parseElements(String)

22:33:55,773 DEBUG [HeaderElement] - enter HeaderElement.parseElements(char[])

22:33:55,773 DEBUG [HttpConnection] - enter HttpConnection.isResponseAvailable(int)

22:33:55,775 WARN  [HttpMethodBase] - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.

22:33:55,775 DEBUG [HttpMethodBase] - Buffering response body

22:33:55,775 DEBUG [HttpParser] - enter HeaderParser.parseHeaders(InputStream, String)

22:33:55,775 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,775 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,775 DEBUG [HttpMethodBase] - Resorting to protocol version default close connection policy

22:33:55,775 DEBUG [HttpMethodBase] - Should NOT close connection, using HTTP/1.1

22:33:55,775 DEBUG [HttpConnection] - enter HttpConnection.isResponseAvailable()

22:33:55,775 DEBUG [HttpConnection] - enter HttpConnection.releaseConnection()

22:33:55,775 DEBUG [HttpConnection] - Releasing connection back to connection manager.

22:33:55,890 DEBUG [DefaultHttpParams] - Set parameter http.socket.timeout = 3000

22:33:55,890 DEBUG [DefaultHttpParams] - Set parameter http.socket.timeout = 3000

22:33:55,891 DEBUG [HttpClient] - enter HttpClient.executeMethod(HttpMethod)

22:33:55,891 DEBUG [HttpClient] - enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)

22:33:55,891 DEBUG [HttpMethodDirector] - Attempt number 1 to process request

22:33:55,891 DEBUG [HttpConnection] - enter HttpConnection.open()

22:33:55,891 DEBUG [HttpConnection] - Open connection to localhost:8088

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.execute(HttpState, HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequest(HttpState, HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.generateRequestLine(HttpConnection, String, String, String, String)

22:33:55,892 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,892 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,892 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)

22:33:55,892 DEBUG [HttpMethodBase] - enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)

22:33:55,893 DEBUG [HttpMethodBase] - Adding Host request header

22:33:55,893 DEBUG [HttpMethodBase] - enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)

22:33:55,893 DEBUG [HttpState] - enter HttpState.getCookies()

22:33:55,893 DEBUG [CookieSpec] - enter CookieSpecBase.match(String, int, String, boolean, Cookie[])

22:33:55,893 DEBUG [HttpMethodBase] - enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.print(String)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.writeLine()

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[])

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.write(byte[], int, int)

22:33:55,893 DEBUG [HttpConnection] - enter HttpConnection.flushRequestOutputStream()

22:33:55,893 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponse(HttpState, HttpConnection)

22:33:55,893 DEBUG [HttpMethodBase] - enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)

22:33:55,894 DEBUG [HttpConnection] - enter HttpConnection.readLine()

22:33:55,894 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,894 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,896 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)

22:33:55,896 DEBUG [HttpConnection] - enter HttpConnection.getResponseInputStream()

22:33:55,896 DEBUG [HttpParser] - enter HeaderParser.parseHeaders(InputStream, String)

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,896 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpMethodBase] - enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)

22:33:55,897 DEBUG [HttpMethodBase] - enter HttpMethodBase.processCookieHeaders(Header[], HttpState, HttpConnection)

22:33:55,897 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)

22:33:55,897 DEBUG [HttpMethodBase] - enter HttpMethodBase.readResponseBody(HttpConnection)

22:33:55,897 DEBUG [HttpConnection] - enter HttpConnection.getResponseInputStream()

22:33:55,897 DEBUG [HttpMethodBase] - enter HttpMethodBase.canResponseHaveBody(int)

22:33:55,897 DEBUG [HeaderElement] - enter HeaderElement.parseElements(String)

22:33:55,897 DEBUG [HeaderElement] - enter HeaderElement.parseElements(char[])

22:33:55,897 DEBUG [HttpConnection] - enter HttpConnection.isResponseAvailable(int)

22:33:55,897 WARN  [HttpMethodBase] - Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.

22:33:55,897 DEBUG [HttpMethodBase] - Buffering response body

22:33:55,897 DEBUG [HttpParser] - enter HeaderParser.parseHeaders(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readLine(InputStream, String)

22:33:55,897 DEBUG [HttpParser] - enter HttpParser.readRawLine()

22:33:55,897 DEBUG [HttpMethodBase] - Resorting to protocol version default close connection policy

22:33:55,898 DEBUG [HttpMethodBase] - Should NOT close connection, using HTTP/1.1

22:33:55,898 DEBUG [HttpConnection] - enter HttpConnection.isResponseAvailable()

22:33:55,898 DEBUG [HttpConnection] - enter HttpConnection.releaseConnection()

22:33:55,898 DEBUG [HttpConnection] - Releasing connection back to connection manager.

</stdOut>
    <stdErr>SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-jdk14-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/Users/oleg.ponomaryov/views/fitnesse/ibotta/target/dependencies/slf4j-log4j12-1.7.20.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory]
Nov 30, 2021 10:33:55 PM smartrics.rest.fitnesse.fixture.RestFixture &lt;clinit&gt;
INFO: ############ Detected FitNesse version: v20211030 ###########

</stdErr>
  </executionLog>
  <finalCounts>
    <right>2</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>739</totalRunTimeInMillis>
</suiteResults>

